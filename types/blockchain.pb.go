// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain.proto

package types // import "github.com/aergoio/aergo/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Block struct {
	Hash                 []byte       `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Header               *BlockHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body                 *BlockBody   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{0}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetBody() *BlockBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type BlockHeader struct {
	PrevBlockHash        []byte   `protobuf:"bytes,1,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	BlockNo              uint64   `protobuf:"varint,2,opt,name=blockNo,proto3" json:"blockNo,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlocksRootHash       []byte   `protobuf:"bytes,4,opt,name=blocksRootHash,proto3" json:"blocksRootHash,omitempty"`
	TxsRootHash          []byte   `protobuf:"bytes,5,opt,name=txsRootHash,proto3" json:"txsRootHash,omitempty"`
	PubKey               []byte   `protobuf:"bytes,6,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{1}
}
func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (dst *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(dst, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *BlockHeader) GetBlockNo() uint64 {
	if m != nil {
		return m.BlockNo
	}
	return 0
}

func (m *BlockHeader) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeader) GetBlocksRootHash() []byte {
	if m != nil {
		return m.BlocksRootHash
	}
	return nil
}

func (m *BlockHeader) GetTxsRootHash() []byte {
	if m != nil {
		return m.TxsRootHash
	}
	return nil
}

func (m *BlockHeader) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *BlockHeader) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type BlockBody struct {
	Txs                  []*Tx    `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockBody) Reset()         { *m = BlockBody{} }
func (m *BlockBody) String() string { return proto.CompactTextString(m) }
func (*BlockBody) ProtoMessage()    {}
func (*BlockBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{2}
}
func (m *BlockBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockBody.Unmarshal(m, b)
}
func (m *BlockBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockBody.Marshal(b, m, deterministic)
}
func (dst *BlockBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockBody.Merge(dst, src)
}
func (m *BlockBody) XXX_Size() int {
	return xxx_messageInfo_BlockBody.Size(m)
}
func (m *BlockBody) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockBody.DiscardUnknown(m)
}

var xxx_messageInfo_BlockBody proto.InternalMessageInfo

func (m *BlockBody) GetTxs() []*Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

type TxList struct {
	Txs                  []*Tx    `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxList) Reset()         { *m = TxList{} }
func (m *TxList) String() string { return proto.CompactTextString(m) }
func (*TxList) ProtoMessage()    {}
func (*TxList) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{3}
}
func (m *TxList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxList.Unmarshal(m, b)
}
func (m *TxList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxList.Marshal(b, m, deterministic)
}
func (dst *TxList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxList.Merge(dst, src)
}
func (m *TxList) XXX_Size() int {
	return xxx_messageInfo_TxList.Size(m)
}
func (m *TxList) XXX_DiscardUnknown() {
	xxx_messageInfo_TxList.DiscardUnknown(m)
}

var xxx_messageInfo_TxList proto.InternalMessageInfo

func (m *TxList) GetTxs() []*Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Tx struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Body                 *TxBody  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{4}
}
func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (dst *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(dst, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Tx) GetBody() *TxBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Tx) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type TxBody struct {
	Nonce                uint64   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Account              []byte   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Recipient            []byte   `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount               uint64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Payload              []byte   `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Limit                uint64   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Price                uint64   `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Sign                 []byte   `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxBody) Reset()         { *m = TxBody{} }
func (m *TxBody) String() string { return proto.CompactTextString(m) }
func (*TxBody) ProtoMessage()    {}
func (*TxBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{5}
}
func (m *TxBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxBody.Unmarshal(m, b)
}
func (m *TxBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxBody.Marshal(b, m, deterministic)
}
func (dst *TxBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxBody.Merge(dst, src)
}
func (m *TxBody) XXX_Size() int {
	return xxx_messageInfo_TxBody.Size(m)
}
func (m *TxBody) XXX_DiscardUnknown() {
	xxx_messageInfo_TxBody.DiscardUnknown(m)
}

var xxx_messageInfo_TxBody proto.InternalMessageInfo

func (m *TxBody) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TxBody) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *TxBody) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *TxBody) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TxBody) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TxBody) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TxBody) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TxBody) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type TxIdx struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Idx                  int32    `protobuf:"varint,2,opt,name=idx,proto3" json:"idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxIdx) Reset()         { *m = TxIdx{} }
func (m *TxIdx) String() string { return proto.CompactTextString(m) }
func (*TxIdx) ProtoMessage()    {}
func (*TxIdx) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{6}
}
func (m *TxIdx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxIdx.Unmarshal(m, b)
}
func (m *TxIdx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxIdx.Marshal(b, m, deterministic)
}
func (dst *TxIdx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxIdx.Merge(dst, src)
}
func (m *TxIdx) XXX_Size() int {
	return xxx_messageInfo_TxIdx.Size(m)
}
func (m *TxIdx) XXX_DiscardUnknown() {
	xxx_messageInfo_TxIdx.DiscardUnknown(m)
}

var xxx_messageInfo_TxIdx proto.InternalMessageInfo

func (m *TxIdx) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *TxIdx) GetIdx() int32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

type TxInBlock struct {
	TxIdx                *TxIdx   `protobuf:"bytes,1,opt,name=txIdx,proto3" json:"txIdx,omitempty"`
	Tx                   *Tx      `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInBlock) Reset()         { *m = TxInBlock{} }
func (m *TxInBlock) String() string { return proto.CompactTextString(m) }
func (*TxInBlock) ProtoMessage()    {}
func (*TxInBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{7}
}
func (m *TxInBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInBlock.Unmarshal(m, b)
}
func (m *TxInBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInBlock.Marshal(b, m, deterministic)
}
func (dst *TxInBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInBlock.Merge(dst, src)
}
func (m *TxInBlock) XXX_Size() int {
	return xxx_messageInfo_TxInBlock.Size(m)
}
func (m *TxInBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TxInBlock proto.InternalMessageInfo

func (m *TxInBlock) GetTxIdx() *TxIdx {
	if m != nil {
		return m.TxIdx
	}
	return nil
}

func (m *TxInBlock) GetTx() *Tx {
	if m != nil {
		return m.Tx
	}
	return nil
}

type State struct {
	Account              []byte   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Nonce                uint64   `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Balance              uint64   `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{8}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *State) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *State) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type Vote struct {
	Candidate            []byte   `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{9}
}
func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (dst *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(dst, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetCandidate() []byte {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *Vote) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type VoteList struct {
	Votes                []*Vote  `protobuf:"bytes,1,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteList) Reset()         { *m = VoteList{} }
func (m *VoteList) String() string { return proto.CompactTextString(m) }
func (*VoteList) ProtoMessage()    {}
func (*VoteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_ae80aba98954d6d5, []int{10}
}
func (m *VoteList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteList.Unmarshal(m, b)
}
func (m *VoteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteList.Marshal(b, m, deterministic)
}
func (dst *VoteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteList.Merge(dst, src)
}
func (m *VoteList) XXX_Size() int {
	return xxx_messageInfo_VoteList.Size(m)
}
func (m *VoteList) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteList.DiscardUnknown(m)
}

var xxx_messageInfo_VoteList proto.InternalMessageInfo

func (m *VoteList) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "types.Block")
	proto.RegisterType((*BlockHeader)(nil), "types.BlockHeader")
	proto.RegisterType((*BlockBody)(nil), "types.BlockBody")
	proto.RegisterType((*TxList)(nil), "types.TxList")
	proto.RegisterType((*Tx)(nil), "types.Tx")
	proto.RegisterType((*TxBody)(nil), "types.TxBody")
	proto.RegisterType((*TxIdx)(nil), "types.TxIdx")
	proto.RegisterType((*TxInBlock)(nil), "types.TxInBlock")
	proto.RegisterType((*State)(nil), "types.State")
	proto.RegisterType((*Vote)(nil), "types.Vote")
	proto.RegisterType((*VoteList)(nil), "types.VoteList")
}

func init() { proto.RegisterFile("blockchain.proto", fileDescriptor_blockchain_ae80aba98954d6d5) }

var fileDescriptor_blockchain_ae80aba98954d6d5 = []byte{
	// 544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x4d, 0xab, 0xd3, 0x4c,
	0x14, 0xc7, 0xc9, 0x5b, 0xef, 0xed, 0x49, 0xef, 0x43, 0x19, 0x1e, 0x24, 0xa2, 0x48, 0xef, 0x70,
	0x95, 0x22, 0xd8, 0x0b, 0x75, 0xe1, 0xc6, 0x55, 0x57, 0x56, 0x45, 0x71, 0x2c, 0x2e, 0xdc, 0x4d,
	0x92, 0xa1, 0x1d, 0x6c, 0x32, 0x21, 0x99, 0x5e, 0xa6, 0x7e, 0x42, 0xbf, 0x86, 0xdf, 0x44, 0xe6,
	0x4c, 0x9a, 0xa4, 0x45, 0x5c, 0x75, 0xfe, 0xff, 0xf3, 0x32, 0x67, 0x7e, 0x39, 0x14, 0xa6, 0xe9,
	0x5e, 0x65, 0x3f, 0xb2, 0x1d, 0x97, 0xe5, 0xa2, 0xaa, 0x95, 0x56, 0x24, 0xd2, 0xc7, 0x4a, 0x34,
	0xb4, 0x80, 0x68, 0x65, 0x43, 0x84, 0x40, 0xb8, 0xe3, 0xcd, 0x2e, 0xf1, 0x66, 0xde, 0x7c, 0xc2,
	0xf0, 0x4c, 0x5e, 0xc2, 0x68, 0x27, 0x78, 0x2e, 0xea, 0xc4, 0x9f, 0x79, 0xf3, 0x78, 0x49, 0x16,
	0x58, 0xb4, 0xc0, 0x8a, 0x77, 0x18, 0x61, 0x6d, 0x06, 0xb9, 0x83, 0x30, 0x55, 0xf9, 0x31, 0x09,
	0x30, 0x73, 0x3a, 0xcc, 0x5c, 0xa9, 0xfc, 0xc8, 0x30, 0x4a, 0x7f, 0x7b, 0x10, 0x0f, 0xaa, 0xc9,
	0x1d, 0xdc, 0x54, 0xb5, 0x78, 0x70, 0x56, 0x7f, 0xfd, 0xb9, 0x49, 0x12, 0xb8, 0xc2, 0xf9, 0x3f,
	0x29, 0x1c, 0x24, 0x64, 0x27, 0x49, 0x9e, 0xc2, 0x58, 0xcb, 0x42, 0x34, 0x9a, 0x17, 0x15, 0x5e,
	0x1d, 0xb0, 0xde, 0x20, 0x2f, 0xe0, 0x3f, 0x4c, 0x6c, 0x98, 0x52, 0x1a, 0xdb, 0x87, 0xd8, 0xfe,
	0xc2, 0x25, 0x33, 0x88, 0xb5, 0xe9, 0x93, 0x22, 0x4c, 0x1a, 0x5a, 0xe4, 0x11, 0x8c, 0xaa, 0x43,
	0xfa, 0x41, 0x1c, 0x93, 0x11, 0x06, 0x5b, 0x65, 0xa9, 0x35, 0x72, 0x5b, 0x26, 0x57, 0x8e, 0x9a,
	0x3d, 0xd3, 0x39, 0x8c, 0xbb, 0x67, 0x93, 0x27, 0x10, 0x68, 0xd3, 0x24, 0xde, 0x2c, 0x98, 0xc7,
	0xcb, 0x71, 0x4b, 0x65, 0x63, 0x98, 0x75, 0xe9, 0x73, 0x18, 0x6d, 0xcc, 0x47, 0xd9, 0xe8, 0x7f,
	0xa7, 0x7d, 0x06, 0x7f, 0x63, 0xfe, 0xfa, 0x81, 0x6e, 0x5b, 0xe8, 0xee, 0xf3, 0xdc, 0x74, 0x75,
	0x3d, 0x71, 0x37, 0xe1, 0x4f, 0x81, 0x70, 0x42, 0x86, 0x67, 0xfa, 0xcb, 0xb3, 0x17, 0xe3, 0x7c,
	0xff, 0x43, 0x54, 0xaa, 0x32, 0x13, 0xd8, 0x36, 0x64, 0x4e, 0x58, 0xe0, 0x3c, 0xcb, 0xd4, 0xa1,
	0xd4, 0xd8, 0x7a, 0xc2, 0x4e, 0xd2, 0x02, 0xaf, 0x45, 0x26, 0x2b, 0x29, 0x4a, 0x8d, 0x3d, 0x27,
	0xac, 0x37, 0x2c, 0x26, 0x5e, 0x60, 0x59, 0x88, 0xed, 0x5a, 0x65, 0xfb, 0x55, 0xfc, 0xb8, 0x57,
	0x3c, 0x6f, 0xe1, 0x9e, 0xa4, 0xbd, 0x7f, 0x2f, 0x0b, 0xa9, 0x91, 0x6b, 0xc8, 0x9c, 0xb0, 0x6e,
	0x55, 0xcb, 0x4c, 0x20, 0xd7, 0x90, 0x39, 0xd1, 0xc1, 0xbe, 0x1e, 0xc0, 0x7e, 0x03, 0xd1, 0xc6,
	0xac, 0x73, 0x63, 0x07, 0x4b, 0x2f, 0xb6, 0xa8, 0x37, 0xc8, 0x14, 0x02, 0x99, 0x1b, 0x7c, 0x4c,
	0xc4, 0xec, 0x91, 0xbe, 0x87, 0xf1, 0xc6, 0xac, 0x4b, 0xb7, 0xfc, 0x14, 0x22, 0x6d, 0xbb, 0x60,
	0x61, 0xbc, 0x9c, 0x74, 0x20, 0xd7, 0xb9, 0x61, 0x2e, 0x44, 0x1e, 0x83, 0xaf, 0x4d, 0x4b, 0x7a,
	0xf0, 0x85, 0x7c, 0x6d, 0xe8, 0x17, 0x88, 0xbe, 0x6a, 0xae, 0xcf, 0xb8, 0x79, 0xe7, 0xdc, 0x3a,
	0xce, 0xfe, 0x05, 0xe7, 0x94, 0xef, 0xb9, 0xf5, 0x83, 0x76, 0xb1, 0x9d, 0xa4, 0x6f, 0x21, 0xfc,
	0xa6, 0xb4, 0xb0, 0xcf, 0xca, 0x78, 0x99, 0xcb, 0x9c, 0x6b, 0x71, 0x7a, 0x56, 0x67, 0x0c, 0x78,
	0xfb, 0x43, 0xde, 0xf4, 0x15, 0x5c, 0xdb, 0x6a, 0x5c, 0xad, 0x5b, 0x88, 0x1e, 0x94, 0x16, 0xa7,
	0xe5, 0x8a, 0xdb, 0xd1, 0x6d, 0x9c, 0xb9, 0xc8, 0x6a, 0xf6, 0xfd, 0xd9, 0x56, 0xea, 0xdd, 0x21,
	0x5d, 0x64, 0xaa, 0xb8, 0xe7, 0xa2, 0xde, 0x2a, 0xa9, 0xdc, 0xef, 0x3d, 0x66, 0xa7, 0x23, 0xfc,
	0xd3, 0x78, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0x74, 0xd5, 0xab, 0x97, 0x48, 0x04, 0x00, 0x00,
}
