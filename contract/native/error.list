/**
 * @file    error.list
 * @copyright defined in aergo/LICENSE.txt
 */

#ifndef error
#define error(code, msg)
#endif

/******************************************************************************
 * common 
 *****************************************************************************/
error(ERROR_INVALID_FLAG,           "invalid command line flag '%s'")
error(ERROR_OUT_OF_MEM,             "out of memory: %s")
error(ERROR_DIR_IO,                 "%s: %s")
error(ERROR_FILE_IO,                "%s: %s")

/******************************************************************************
 * preprocessor
 *****************************************************************************/
error(ERROR_CYCLIC_IMPORT,          "cyclic import detected")

/******************************************************************************
 * parser
 *****************************************************************************/
error(ERROR_UNTERMINATED_COMMENT,   "unterminated comment")
error(ERROR_UNTERMINATED_STRING,    "unterminated string")
error(ERROR_UNTERMINATED_SQL,       "unterminated SQL")
error(ERROR_UNKNOWN_CHAR,           "unknown character")
error(ERROR_DUPLICATED_ID,          "duplicated identifier '%s'")
error(ERROR_TOO_LONG_ID,            "identifier too long (<= %d bytes, but %d bytes)")
error(ERROR_SYNTAX,                 "%s")

/******************************************************************************
 * semantic checker
 *****************************************************************************/
error(ERROR_UNDEFINED_TYPE,         "undefined type %s")
error(ERROR_UNDEFINED_ID,           "undefined identifier '%s'")
error(ERROR_UNDEFINED_LABEL,        "undefined label '%s'")
error(ERROR_UNUSED_ID,              "'%s' declared, but not used")
error(ERROR_NOT_SUPPORTED,          "not supported yet")
error(ERROR_NOT_COMPARABLE_TYPE,    "not comparable type %s")
error(ERROR_NOT_CALLABLE_EXP,       "not callable expression")
error(ERROR_NOT_IMPLEMENTED,        "function '%s' must be implemented")
error(ERROR_NOT_ALLOWED_PARAM,      "cannot be used as parameter")
error(ERROR_INACCESSIBLE_TYPE,      "inaccessible type %s")
error(ERROR_INCOMPATIBLE_TYPE,      "incompatible types %s and %s")
error(ERROR_MISSING_ARR_SIZE,       "array size is missing")
error(ERROR_MISSING_CONST_VAL,      "constant value is missing")
error(ERROR_MISSING_RETURN,         "return statement is missing")
error(ERROR_MISMATCHED_NAME,        "mismatched name (expected %s, but %s)")
error(ERROR_MISMATCHED_TYPE,        "mismatched type (expected %s, but %s)")
error(ERROR_MISMATCHED_COUNT,       "mismatched %s count (expected %d, but %d)")
error(ERROR_INVALID_LVALUE,         "expression or constant cannot be a lvalue")
error(ERROR_INVALID_OP_TYPE,        "operand(s) has invalid type %s")
error(ERROR_INVALID_COND_TYPE,      "condition(s) has non-boolean type %s")
error(ERROR_INVALID_SIZE_VAL,       "size (or index) value must be an integer constant")
error(ERROR_INVALID_SUBSCRIPT,      "subscripted value is neither array nor map")
error(ERROR_INVALID_ENUM_VAL,       "enumerator value must be an integer constant")
error(ERROR_INVALID_CASE,           "case statement must be came to")
error(ERROR_INVALID_CONTINUE,       "continue statement must be within a loop")
error(ERROR_INVALID_BREAK,          "break statement must be within a loop or switch")
error(ERROR_INVALID_ARR_IDX,        "array index out of bounds")
error(ERROR_INVALID_INITIALIZER,    "new initializer must be an array")
error(ERROR_DUPLICATED_CASE,        "duplicated case condition")
error(ERROR_DUPLICATED_ENUM,        "duplicated enumerator value")
error(ERROR_DUPLICATED_LABEL,       "duplicated %s label")
error(ERROR_IGNORED_STMT,           "statement is ignored")
error(ERROR_NUMERIC_OVERFLOW,       "numeric value overflows %s")
error(ERROR_DIVIDE_BY_ZERO,         "division by zero")

/******************************************************************************
 * wasm generator
 *****************************************************************************/
error(ERROR_STACK_OVERFLOW,         "stack overflows (<= %d bytes, but %d bytes)")
error(ERROR_BINARY_OVERFLOW,        "binary length overflows (<= %d bytes, but %d bytes)")

/******************************************************************************
 * wasm vm
 *****************************************************************************/
error(ERROR_RUNTIME,                "%s")

/* vim:set filetype=c: */
