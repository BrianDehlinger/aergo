@desc arithmetic_operator
contract test {
    int v1 = 1 + 1;
    int v2 = 1 - 1;
    int v3 = 1 * 1;
    int v4 = 1 / 1;
    int v5 = 1 % 1;

    int v6 = (2 * 3) / (5 + 1) % 1;
}

@desc logical_operator
contract test {
    bool v1 = true && false;
    bool v2 = true || false;

    bool v3 = (true || false) && (true);
}

@desc bitwise_operator
contract test {
    int v1 = (0x08 & 0x02);
    int v2 = 0xFF ^ 0x02;

    int v3 = 1 << 1;
    int v4 = 0xff >> 1;
}

@desc comparison_operator
contract test {
    bool v1 = 1 == 1;
    bool v2 = 1 != 1;
    bool v3 = 1 > 1;
    bool v4 = 1 < 1;
    bool v5 = 1 >= 1;
    bool v6 = 1 <= 1;
}

@desc conditional_operator
contract test {
    int v1 = true ? 1 : 0;
    int v2 = true ? 1 : false ? 2 : 0;
    int v3 = (1 == 1) ? 1 + 1 : 0;
}
