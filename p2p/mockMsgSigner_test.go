package p2p

import (
	"github.com/libp2p/go-libp2p-peer"
)
import "github.com/stretchr/testify/mock"

import "github.com/aergoio/aergo/types"

// mockMsgSigner is an autogenerated mock type for the msgSigner type
type mockMsgSigner struct {
	mock.Mock
}

// signMsg provides a mock function with given fields: msg
func (_m *mockMsgSigner) signMsg(msg *types.P2PMessage) error {
	ret := _m.Called(msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.P2PMessage) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// verifyMsg provides a mock function with given fields: msg, pubKey
func (_m *mockMsgSigner) verifyMsg(msg *types.P2PMessage, senderID peer.ID) error {
	ret := _m.Called(msg, senderID)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.P2PMessage, peer.ID) error); ok {
		r0 = rf(msg, senderID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
