// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aergoio/aergo/p2p/p2pcommon (interfaces: MoFactory)

// Package p2pmock is a generated GoMock package.
package p2pmock

import (
	p2pcommon "github.com/aergoio/aergo/p2p/p2pcommon"
	types "github.com/aergoio/aergo/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMoFactory is a mock of MoFactory interface
type MockMoFactory struct {
	ctrl     *gomock.Controller
	recorder *MockMoFactoryMockRecorder
}

// MockMoFactoryMockRecorder is the mock recorder for MockMoFactory
type MockMoFactoryMockRecorder struct {
	mock *MockMoFactory
}

// NewMockMoFactory creates a new mock instance
func NewMockMoFactory(ctrl *gomock.Controller) *MockMoFactory {
	mock := &MockMoFactory{ctrl: ctrl}
	mock.recorder = &MockMoFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMoFactory) EXPECT() *MockMoFactoryMockRecorder {
	return m.recorder
}

// NewMsgBPBroadcastOrder mocks base method
func (m *MockMoFactory) NewMsgBPBroadcastOrder(arg0 *types.BlockProducedNotice) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgBPBroadcastOrder", arg0)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgBPBroadcastOrder indicates an expected call of NewMsgBPBroadcastOrder
func (mr *MockMoFactoryMockRecorder) NewMsgBPBroadcastOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgBPBroadcastOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgBPBroadcastOrder), arg0)
}

// NewMsgBlkBroadcastOrder mocks base method
func (m *MockMoFactory) NewMsgBlkBroadcastOrder(arg0 *types.NewBlockNotice) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgBlkBroadcastOrder", arg0)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgBlkBroadcastOrder indicates an expected call of NewMsgBlkBroadcastOrder
func (mr *MockMoFactoryMockRecorder) NewMsgBlkBroadcastOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgBlkBroadcastOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgBlkBroadcastOrder), arg0)
}

// NewMsgBlockRequestOrder mocks base method
func (m *MockMoFactory) NewMsgBlockRequestOrder(arg0 p2pcommon.ResponseReceiver, arg1 p2pcommon.SubProtocol, arg2 p2pcommon.MessageBody) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgBlockRequestOrder", arg0, arg1, arg2)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgBlockRequestOrder indicates an expected call of NewMsgBlockRequestOrder
func (mr *MockMoFactoryMockRecorder) NewMsgBlockRequestOrder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgBlockRequestOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgBlockRequestOrder), arg0, arg1, arg2)
}

// NewMsgRequestOrder mocks base method
func (m *MockMoFactory) NewMsgRequestOrder(arg0 bool, arg1 p2pcommon.SubProtocol, arg2 p2pcommon.MessageBody) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgRequestOrder", arg0, arg1, arg2)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgRequestOrder indicates an expected call of NewMsgRequestOrder
func (mr *MockMoFactoryMockRecorder) NewMsgRequestOrder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgRequestOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgRequestOrder), arg0, arg1, arg2)
}

// NewMsgResponseOrder mocks base method
func (m *MockMoFactory) NewMsgResponseOrder(arg0 p2pcommon.MsgID, arg1 p2pcommon.SubProtocol, arg2 p2pcommon.MessageBody) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgResponseOrder", arg0, arg1, arg2)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgResponseOrder indicates an expected call of NewMsgResponseOrder
func (mr *MockMoFactoryMockRecorder) NewMsgResponseOrder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgResponseOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgResponseOrder), arg0, arg1, arg2)
}

// NewMsgTxBroadcastOrder mocks base method
func (m *MockMoFactory) NewMsgTxBroadcastOrder(arg0 *types.NewTransactionsNotice) p2pcommon.MsgOrder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMsgTxBroadcastOrder", arg0)
	ret0, _ := ret[0].(p2pcommon.MsgOrder)
	return ret0
}

// NewMsgTxBroadcastOrder indicates an expected call of NewMsgTxBroadcastOrder
func (mr *MockMoFactoryMockRecorder) NewMsgTxBroadcastOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMsgTxBroadcastOrder", reflect.TypeOf((*MockMoFactory)(nil).NewMsgTxBroadcastOrder), arg0)
}
